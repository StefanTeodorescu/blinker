define contact{
	name				generic-contact		; The name of this contact template
	service_notification_period	24x7			; service notifications can be sent anytime
	host_notification_period	24x7			; host notifications can be sent anytime
	service_notification_options	w,u,c,r,f,s		; send notifications for all service states, flapping events, and scheduled downtime events
	host_notification_options	d,u,r,f,s		; send notifications for all host states, flapping events, and scheduled downtime events
	service_notification_commands	notify-service-by-email	; send service notifications via email
	host_notification_commands	notify-host-by-email	; send host notifications via email
	register			0			; DON'T REGISTER THIS DEFINITION - IT'S NOT A REAL CONTACT, JUST A TEMPLATE!
	}

define host{
	name				generic-host		; The name of this host template
	notifications_enabled		1			; Host notifications are enabled
	event_handler_enabled		1			; Host event handler is enabled
	flap_detection_enabled		1			; Flap detection is enabled
	process_perf_data		1			; Process performance data
	retain_status_information	1			; Retain status information across program restarts
	retain_nonstatus_information	1			; Retain non-status information across program restarts
	check_command			check-host-alive		; Default command to check hosts
	check_period			24x7			; Hosts are checked round the clock
	check_interval			5			; Actively check the host every 5 minutes
	notification_period		24x7			; Send host notifications at any time
	notification_interval		240			; Resend notifications every 4 hours
	max_check_attempts		5			; Check each Linux host 10 times (max)
	contact_groups			admins			; Notifications get sent to the admins by default
	register			0			; DON'T REGISTER THIS DEFINITION - IT'S NOT A REAL HOST, JUST A TEMPLATE!
	}


define service{
	name				generic-service		; The 'name' of this service template
	active_checks_enabled		1			; Active service checks are enabled
	passive_checks_enabled		1			; Passive service checks are enabled/accepted
	parallelize_check		1			; Active service checks should be parallelized (disabling this can lead to major performance problems)
	obsess_over_service		1			; We should obsess over this service (if necessary)
	check_freshness			0			; Default is to NOT check service 'freshness'
	notifications_enabled		1			; Service notifications are enabled
	event_handler_enabled		1			; Service event handler is enabled
	flap_detection_enabled		1			; Flap detection is enabled
	process_perf_data		1			; Process performance data
	retain_status_information	1			; Retain status information across program restarts
	retain_nonstatus_information	1			; Retain non-status information across program restarts
	is_volatile			0			; The service is not volatile
	check_period			24x7			; The service can be checked at any time of the day
	max_check_attempts		3			; Re-check the service up to 3 times in order to determine its final (hard) state
	normal_check_interval		5			; Check the service every 5 minutes under normal conditions
	retry_check_interval		1			; Re-check the service every minute until a hard state can be determined
	contact_groups			admins			; Notifications get sent out to everyone in the 'admins' group
	notification_options		w,u,c,r			; Send notifications about warning, unknown, critical, and recovery events
	notification_interval		240			; Re-notify about service problems every four hours
	notification_period		24x7			; Notifications can be sent out at any time
	register			0			; DON'T REGISTER THIS DEFINITION - IT'S NOT A REAL SERVICE, JUST A TEMPLATE!
	}
